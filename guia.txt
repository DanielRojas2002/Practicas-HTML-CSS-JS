Aqui iran los atributos de CSS y su funcion:


Existen 6 tipos de Selectores
-------------------------------
/* Selector Universal*/
* a{
    color: red;
}

/*Selector de Tipo*/
h1{
    color: blue;  
}

/*Selector por clase*/
.titulo2{
    color: rgb(175, 218, 21);
}


/*Selector por id*/
#elemento-id-titulo{
    color: orange;
}

/*Selector por Atributo*/
[atributo1="at1"]{
    color:green;
}

/*Selector por Descendiente*/
h2 p{
    color: yellow;
}
-----------------------------------

Esta metodologia es la mas usada pero exiten muchas

/*METODOLOGIA BEM */
.contact-form{
    background-color:yellow;
}

.contact-form__input--active{
    color: red;
}

.contact-form__input{
    color: green;
}
----------------------------------------------
ATRIBUTOS:              
width: 520px;               =ANCHO 
height:520px;               =ALTO
background:yellow;          =FONDO

padding:100px;              = separa lo que contenga lo separa del padre arriba,abajo derecha,izquierda
margin: 50px auto;          =MARGEN auto se refiere que se pondran en medio horizontalmente
margin-top: 50px;           =margen hacia arriba 
border: 3px solid black;    =borde de 3 pixeles tipo solido color negro
text-align: center;         = centra el texto 
font-size: 40px;            = tamaño de letra
font-weight:100;            = ancho de letra
overflow :auto; =           = te permite poner un scroll de acuerdo al contenedor auto lo detecta automaticamente
transition: all 2s;         = Esto hace que todo los atributos se tarden en aparecer haciendo una animacion
---------------------------------------------------------------------------------------------------------------------


POSITIONS:
position: relative;         =POSICION TOMA EL ORDEN DE LOS DIVS
position: absolute;         =posicion toma la caja padre 
position: fixed;            = Sirve para poner algo fijo y que se mueva con el scroll se usa en navs o en anuncios
position:sticky;            =Sticky se comporta como relative y como fixed


ATRIBUTOS DE POSITIONS:
left: 0;                    = hacia la izquierda muevelo esquina izquierda
right=0;                    = hacia la derecha muevelo esquina derecha
bottom: 0;                  = hacia abajo muevelo esquina de abajo
top:0;                      = hacia arriba muevelo esquina de arriba
    tambien se puede poner con pixeles
    left:200px; right:120px;etc..


DISPLAY:
Es la manera de compartarse de las cajas

DISPLAY:Block; seria tipo bloque como los h1 etc toma todo el renglon 
DISPLAY:inline seria tipo linea estos se adaptan al contenido como el p 
DISPLAY :inline-block le podemos dar un ancho y alto y se adapta al contenido puedes poner imagenes y a lado texto
DISPLAY : FLEX
DISPLAY:GRID
-----------------------------------------------------------
PSEUDOELEMENTOS

a::first-line{                              form::placeholder{}

}
p::first-letter{                            p::selector{}

}

p::selector{                                p::before{}
                                            p::after{}
}

--------------------------------------------------------------------------------
PSEUDOCLASES
:hover  = Cuando el mouse este sobre ese elemento
:link = Cuando no se ha vistado una url 
:visited = Cuando algo ya esta visitado 
:active = Cuando se preciona algo
:focus = Es cuando un input esta enfocado
----------------------------------------------------------------------------------
imagenes 
object-fit:cover; = la imagen se ajusta al contenido a la caja padre
        : scale-down = agarra la resolucion mas baja 

----------------------------------------------------------
FLEX:
display:flex default row
flex-direction:row;            =
flex-direction:row-reverse; =
flex-direction:column 
flex-direction:column-reverse; =

flex-wrap:wrap;  Te respeta el tamamo de cada caja si caben lo ponen de seguido si no caben te lo pone abajo

justify-content: justifica el contenido en "x""
center
space-around
space-between
space-evently 

align-items : justifica el contenido en ""y" cuando el contenido es solo una linea en 
center 
flex-end 
flex-start 
baseline

align-content : justifica el contenido en y cuando el contenido es mas de una linea
center 
flex-end 
flex-start 
baseline


items:
flex-grow:1; se reparte el espacio sobrante entre la cantidad de cajs


-----------------------------------------------------------------------------------------
linear-gradient(to bottom,trasnparent,red);

---------------------------------------------
display:grid

display: grid;
grid-template-rows:150px 150px 150px; definir la cantidad y el tamamo de los renglones
grid-template-columns: 150px 150px 150px; definir la cantidad y el tamaño de las columnas

grid-template-rows:repeat(3,150px);
grid-template-columns: repeat(3,150px);

grid-template-colums: 1fr = reparte el tamaño de acuerdo a la pantalla
grid-column= 1/3 = esto signifca que  tome el espacio de la columa 1 a la 4
grid-row=1/3 =  esto signifca que  tome el espacio de la fila 1 a la 4

grid-template-columns:repeat(3,minmax(150px,300px)); Nos ayuda a que ello que tenga el contenedor sea un minimo de 150px y un maximo de 300px
grid-template-columns:repeat(3,min-content(150px));  min-content se adapta a loq ue tenga adentro que se vea lo que este adntro
grid-template-columns:repeat(3,max-content(350px)); 

grid-template-columns:repeat(auto-fill,minmax(150px,1fr));  lo que dice si hay espacio agregalo
grid-template-columns:repeat(auto-fit,minmax(150px,1fr)); lo que hace es que escala el conte